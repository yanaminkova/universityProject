{
    "info": {
        "_postman_id": "631fb4cf-8b15-4053-9928-f1fda0d135c8",
        "name": "C4Uf_beta_business_partner_test",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "JWT",
            "item": [
                {
                    "name": "{{jwtProtocol}}://{{uaa-domain}}/oauth/token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "if(jsonData && jsonData.access_token){",
                                    "    postman.setEnvironmentVariable(\"jwt\", jsonData.access_token);",
                                    "}",
                                    "",
                                    "pm.test(\"Successful POST request\", function () {",
                                    "     pm.expect(pm.response.code).to.be.oneOf([200]);",
                                    "});",
                                    "",
                                    "if (pm.environment.get(\"url\").includes('test')) {",
                                    "    postman.setEnvironmentVariable(\"env_featureFlag\", false)",
                                    "} else if (pm.environment.get(\"url\").includes('stage')) {",
                                    "    postman.setEnvironmentVariable(\"env_featureFlag\", false)",
                                    "} else if (pm.environment.get(\"url\").includes('staging')) {",
                                    "    postman.setEnvironmentVariable(\"env_featureFlag\", false)",
                                    "} else {",
                                    "    postman.setEnvironmentVariable(\"env_featureFlag\", true)",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [""],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "X-CorrelationID",
                                "value": "",
                                "disabled": true
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "response_type",
                                    "value": "token",
                                    "type": "text"
                                },
                                {
                                    "key": "grant_type",
                                    "value": "client_credentials",
                                    "type": "text"
                                },
                                {
                                    "key": "client_id",
                                    "value": "{{uaa_client_id}}",
                                    "type": "text"
                                },
                                {
                                    "key": "client_secret",
                                    "value": "{{uaa_client_secret}}",
                                    "type": "text"
                                },
                                {
                                    "key": "scope",
                                    "value": "",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{jwtProtocol}}://{{uaa-domain}}/oauth/token",
                            "protocol": "{{jwtProtocol}}",
                            "host": ["{{uaa-domain}}"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "BUSINESS_PARTNER CODES",
            "item": [
                {
                    "name": "CREATE",
                    "item": [
                        {
                            "name": "AddressDataUsageCodes",
                            "item": [
                                {
                                    "name": "CREATE AddressDataUsageCodes = Billing",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Billing\",\r\n    \"descr\": \"Billing description\",\r\n    \"code\": \"BILLING\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/AddressDataUsageCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "AddressDataUsageCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE AddressDataUsageCodes = Shipping",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Shipping\",\r\n    \"descr\": \"Shipping description\",\r\n    \"code\": \"SHIPPING\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/AddressDataUsageCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "AddressDataUsageCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE AddressDataUsageCodes = XXDEFAULT",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"XXDEFAULT\",\r\n    \"descr\": \"XXDEFAULT\",\r\n    \"code\": \"XXDEFAULT\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/AddressDataUsageCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "AddressDataUsageCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "CountryCodes",
                            "item": [
                                {
                                    "name": "CREATE CountryCodes = Germany",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Germany\",\r\n    \"descr\": null,\r\n    \"code\": \"DE\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CountryCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CountryCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE CountryCodes = India",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"India\",\r\n    \"descr\": null,\r\n    \"code\": \"IN\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CountryCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CountryCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE CountryCodes = USA",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"USA\",\r\n    \"descr\": null,\r\n    \"code\": \"US\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CountryCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CountryCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "CountrySubdivisionCodes",
                            "item": [
                                {
                                    "name": "CREATE CountrySubdivisionCodes = Delhi",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Delhi\",\r\n    \"descr\": null,\r\n    \"code\": \"DL\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CountrySubdivisionCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CountrySubdivisionCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE CountrySubdivisionCodes = RP",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"RP\",\r\n    \"descr\": null,\r\n    \"code\": \"RP\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CountrySubdivisionCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CountrySubdivisionCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE CountrySubdivisionCodes = Washington",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Washington\",\r\n    \"descr\": null,\r\n    \"code\": \"WA\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CountrySubdivisionCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CountrySubdivisionCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE CountrySubdivisionCodes = Berlin",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Berlin\",\r\n    \"descr\": null,\r\n    \"code\": \"BE\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CountrySubdivisionCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CountrySubdivisionCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE CountrySubdivisionCodes = Ontario",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Ontario\",\r\n    \"descr\": null,\r\n    \"code\": \"ON\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CountrySubdivisionCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CountrySubdivisionCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "CurrencyCodes",
                            "item": [
                                {
                                    "name": "CREATE CurrencyCodes = USD",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"US Dollar\",\r\n    \"descr\": null,\r\n    \"code\": \"USD\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CurrencyCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CurrencyCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE CurrencyCodes = EUR",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Euro\",\r\n    \"descr\": null,\r\n    \"code\": \"EUR\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/CurrencyCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "CurrencyCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "CustomerAccountGroupCodes",
                            "item": [
                                {
                                    "name": "CREATE CustomerAccountGroupCodes =FICA",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"FICA\",\r\n    \"descr\": null,\r\n    \"code\": \"FICA\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/CustomerAccountGroupCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "CustomerAccountGroupCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE CustomerAccountGroupCodes = CUST",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Customers\",\r\n    \"descr\": null,\r\n    \"code\": \"CUST\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/CustomerAccountGroupCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "CustomerAccountGroupCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "CustomerSalesArrangementGroupCodes",
                            "item": [
                                {
                                    "name": "CREATE CustomerSalesArrangementGroupCodes = 03",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Customer Group 03\",\r\n    \"descr\": null,\r\n    \"code\": \"03\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/CustomerSalesArrangementGroupCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "CustomerSalesArrangementGroupCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE CustomerSalesArrangementGroupCodes = 01",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"01\",\r\n    \"descr\": null,\r\n    \"code\": \"01\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/CustomerSalesArrangementGroupCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "CustomerSalesArrangementGroupCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "CustomerSalesArrangementPriceGroupCodes",
                            "item": [
                                {
                                    "name": "CREATE CustomerSalesArrangementPriceGroupCodes = C1",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Regular Buyer\",\r\n    \"descr\": null,\r\n    \"code\": \"C1\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/CustomerSalesArrangementPriceGroupCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "CustomerSalesArrangementPriceGroupCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "CustomerTaxClassificationCodes",
                            "item": [
                                {
                                    "name": "CREATE CustomerTaxClassificationCodes = 1",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Liable for Taxes\",\r\n    \"descr\": null,\r\n    \"code\": \"1\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/CustomerTaxClassificationCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "CustomerTaxClassificationCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "DeliveryPriorityCodes",
                            "item": [
                                {
                                    "name": "CREATE DeliveryPriorityCodes = 00",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": null,\r\n    \"descr\": null,\r\n    \"code\": \"00\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/DeliveryPriorityCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "DeliveryPriorityCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE DeliveryPriorityCodes = 01",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"High\",\r\n    \"descr\": null,\r\n    \"code\": \"01\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/DeliveryPriorityCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "DeliveryPriorityCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE DeliveryPriorityCodes = 02",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json;IEEE754Compatible=true",
                                                "type": "text"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"02\",\r\n    \"descr\": null,\r\n    \"code\": \"02\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/DeliveryPriorityCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "DeliveryPriorityCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "IncotermsClassificationCodes",
                            "item": [
                                {
                                    "name": "CREATE IncotermsClassificationCodes = EXW",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"EX WORKS\",\r\n    \"descr\": null,\r\n    \"code\": \"EXW\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/IncotermsClassificationCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "IncotermsClassificationCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "LanguageCodes",
                            "item": [
                                {
                                    "name": "CREATE LanguageCodes = English",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"English\",\r\n    \"descr\": null,\r\n    \"code\": \"en\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/LanguageCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "LanguageCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE LanguageCodes = English CapitalCode",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"English\",\r\n    \"descr\": null,\r\n    \"code\": \"EN\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/LanguageCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "LanguageCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE LanguageCodes = German",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"German\",\r\n    \"descr\": null,\r\n    \"code\": \"de\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/LanguageCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "LanguageCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "MarketFunctionCodes",
                            "item": [
                                {
                                    "name": "CREATE MarketFunctionCodes = Distributor",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Distributor\",\r\n    \"descr\": \"Distributor Role\",\r\n    \"code\": \"DSO001\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/MarketFunctionCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "MarketFunctionCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE MarketFunctionCodes = Meter Operator",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Meter Operator\",\r\n    \"descr\": \"Meter Operator role\",\r\n    \"code\": \"MRO001\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/MarketFunctionCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "MarketFunctionCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE MarketFunctionCodes = Supplier",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Supplier\",\r\n    \"descr\": \"Supplier role\",\r\n    \"code\": \"SUP001\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/MarketFunctionCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "MarketFunctionCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "SalesPartnerRoleCodes",
                            "item": [
                                {
                                    "name": "CREATE SalesPartnerRoleCodes = AG",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Sold-to Party\",\r\n    \"descr\": null,\r\n    \"code\": \"AG\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/SalesPartnerRoleCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "SalesPartnerRoleCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE SalesPartnerRoleCodes = RE",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Bill-to Party\",\r\n    \"descr\": null,\r\n    \"code\": \"RE\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/SalesPartnerRoleCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "SalesPartnerRoleCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE SalesPartnerRoleCodes = RG",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Payer\",\r\n    \"descr\": null,\r\n    \"code\": \"RG\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/SalesPartnerRoleCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "SalesPartnerRoleCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE SalesPartnerRoleCodes = WE",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Ship-to Party\",\r\n    \"descr\": null,\r\n    \"code\": \"WE\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/SalesPartnerRoleCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "SalesPartnerRoleCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "StreetCodes",
                            "item": [
                                {
                                    "name": "CREATE StreetCodes = Street1",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Street1\",\r\n    \"descr\": \"Street1 description\",\r\n    \"code\": \"street1\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/StreetCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "StreetCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "TaxCategoryCodes",
                            "item": [
                                {
                                    "name": "CREATE TaxCategoryCodes = TTX1",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": null,\r\n    \"descr\": null,\r\n    \"code\": \"TTX1\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/TaxCategoryCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "TaxCategoryCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "TaxNumberTypeCodes",
                            "item": [
                                {
                                    "name": "CREATE TaxNumberTypeCodes = TaxNumber1",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"TaxNumber1 name\",\r\n    \"descr\": \"TaxNumber1 description\",\r\n    \"code\": \"0001\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/TaxNumberTypeCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "TaxNumberTypeCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE TaxNumberTypeCodes = Germany 0",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Germany: VAT Registration Number\",\r\n    \"descr\": null,\r\n    \"code\": \"DE0\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/TaxNumberTypeCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "TaxNumberTypeCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE TaxNumberTypeCodes = US 01",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"US Tax Identification Number\",\r\n    \"descr\": null,\r\n    \"code\": \"US01\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/TaxNumberTypeCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "TaxNumberTypeCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE TaxNumberTypeCodes = CA1",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"Canada: Goods and Service Tax (GST) No.\",\r\n    \"descr\": null,\r\n    \"code\": \"CA1\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp-config}}/TaxNumberTypeCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp-config}}",
                                                "TaxNumberTypeCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "TownCodes",
                            "item": [
                                {
                                    "name": "CREATE TownCodes = Town1",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"name\": \"town1 name\",\r\n    \"descr\": \"town1 name description\",\r\n    \"code\": \"town1\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-config}}/TownCodes",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-config}}",
                                                "TownCodes"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// const entity = pm.request.url.path[3];",
                                    "// pm.globals.set(\"entity\", entity);",
                                    "",
                                    "// pm.test(`Create ${pm.globals.get('entity')}. Successful POST request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {",
                                    "//     pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                                    "// });"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "READ",
                    "item": [
                        {
                            "name": "READ AcademicTitleCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/AcademicTitleCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-config}}",
                                        "AcademicTitleCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ AddressDataUsageCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/AddressDataUsageCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "AddressDataUsageCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ BusinessPartnerRoleCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/BusinessPartnerRoleCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "BusinessPartnerRoleCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CountryCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/CountryCodes",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-config}}", "CountryCodes"]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CountrySubdivisionCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/CountrySubdivisionCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-config}}",
                                        "CountrySubdivisionCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CurrencyCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/CurrencyCodes",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-config}}", "CurrencyCodes"]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CustomerAccountGroupCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/CustomerAccountGroupCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "CustomerAccountGroupCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CustomerSalesArrangementGroupCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/CustomerSalesArrangementGroupCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "CustomerSalesArrangementGroupCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CustomerSalesArrangementPriceGroupCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/CustomerSalesArrangementPriceGroupCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "CustomerSalesArrangementPriceGroupCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CustomerTaxClassificationCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/BusinessPartnerRoleCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "BusinessPartnerRoleCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CountryCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/CountryCodes",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-config}}", "CountryCodes"]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CountrySubdivisionCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/CountrySubdivisionCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-config}}",
                                        "CountrySubdivisionCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CurrencyCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/CurrencyCodes",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-config}}", "CurrencyCodes"]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CustomerAccountGroupCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/CustomerAccountGroupCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "CustomerAccountGroupCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CustomerSalesArrangementGroupCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/CustomerSalesArrangementGroupCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "CustomerSalesArrangementGroupCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CustomerSalesArrangementPriceGroupCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/CustomerSalesArrangementPriceGroupCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "CustomerSalesArrangementPriceGroupCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ CustomerTaxClassificationCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/CustomerTaxClassificationCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "CustomerTaxClassificationCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ DeliveryPriorityCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/CustomerTaxClassificationCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "CustomerTaxClassificationCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ GenderCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/GenderCodes",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-config}}", "GenderCodes"]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ IncotermsClassificationCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/IncotermsClassificationCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-config}}",
                                        "IncotermsClassificationCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ LanguageCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/LanguageCodes",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-config}}", "LanguageCodes"]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ MarketFunctionCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/MarketFunctionCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "MarketFunctionCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ SalesPartnerRoleCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/SalesPartnerRoleCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "SalesPartnerRoleCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ StreetCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/StreetCodes",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-config}}", "StreetCodes"]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ TaxCategoryCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/TaxCategoryCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "TaxCategoryCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ TaxNumberTypeCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[4]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-bp-config}}/TaxNumberTypeCodes",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp-config}}",
                                        "TaxNumberTypeCodes"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ TownCodes",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(`Read ${pm.request.url.path[3]}. Successful GET request ${pm.collectionVariables.get('jira-issue-bp-round-offs')}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json;IEEE754Compatible=true",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{url}}/{{api-config}}/TownCodes",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-config}}", "TownCodes"]
                                }
                            },
                            "response": []
                        }
                    ],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        }
                    ]
                }
            ],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [""]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [""]
                    }
                }
            ]
        },
        {
            "name": "BUSINESS PARTNER",
            "item": [
                {
                    "name": "CREATE",
                    "item": [
                        {
                            "name": "Replicable to S4",
                            "item": [
                                {
                                    "name": "Create BP w/ Person",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner with Person. Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "var jsonData = pm.response.json();\r",
                                                    "if(jsonData && jsonData.id) {\r",
                                                    "    pm.environment.set(\"env_businessPartnerId\", jsonData.id);\r",
                                                    "}"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"person\": {\r\n        \"nameDetails\": {\r\n            \"firstName\": \"Clark\",\r\n            \"lastName\": \"Kent\"\r\n        },\r\n        \"gender\": {\r\n            \"code\": \"1\"\r\n        }\r\n    },\r\n    \"isBlocked\": false,\r\n    \"businessPartnerType\": \"person\",\r\n    \"displayId\": \"1005280\",\r\n    \"roles\": [\r\n        {\r\n            \"validFrom\": \"2021-03-25\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"role\": {\r\n                \"code\": \"MKK\"\r\n            }\r\n        },\r\n        {\r\n            \"validFrom\": \"2021-03-25\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"role\": {\r\n                \"code\": \"UKM000\"\r\n            }\r\n        }\r\n    ],\r\n    \"addressData\": [\r\n        {\r\n            \"validFrom\": \"2021-03-25\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"personPostalAddress\": {\r\n                \"country\": {\r\n                    \"code\": \"IN\"\r\n                },\r\n                \"houseNumber\": \"126\",\r\n                \"street\": {\r\n                    \"name\": \"ITPL MAIN ROAD\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"BLR\"\r\n                },\r\n                \"primaryRegion\": {\r\n                    \"code\": \"DL\"\r\n                },\r\n                \"postCode\": \"201008\"\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": false,\r\n                    \"usage\": {\r\n                        \"code\": \"XXDEFAULT\"\r\n                    },\r\n                    \"validFrom\": \"2021-03-25\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Create BP w/ Organization",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner with Organization. Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "var jsonData = pm.response.json();\r",
                                                    "if(jsonData && jsonData.id) {\r",
                                                    "    pm.environment.set(\"env_businessPartnerId\", jsonData.id);\r",
                                                    "}"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"organization\": {\r\n        \"nameDetails\": {\r\n            \"formattedOrgNameLine1\": \"Sample Org\"\r\n        }\r\n    },\r\n    \"isBlocked\": false,\r\n    \"businessPartnerType\": \"organization\",\r\n    \"displayId\": \"sampleId\",\r\n    \"roles\": [\r\n        {\r\n            \"validFrom\": \"2021-03-25\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"role\": {\r\n                \"code\": \"MKK\"\r\n            }\r\n        },\r\n        {\r\n            \"validFrom\": \"2021-03-25\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"role\": {\r\n                \"code\": \"UKM000\"\r\n            }\r\n        }\r\n    ],\r\n    \"addressData\": [\r\n        {\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"en\"\r\n                }\r\n            },\r\n            \"validFrom\": \"2021-03-25\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"organizationPostalAddress\": {\r\n                \"country\": {\r\n                    \"code\": \"IN\"\r\n                },\r\n                \"houseNumber\": \"126\",\r\n                \"street\": {\r\n                    \"name\": \"ITPL MAIN ROAD\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"BLR\"\r\n                },\r\n                \"primaryRegion\": {\r\n                    \"code\": \"DL\"\r\n                },\r\n                \"postCode\": \"201008\"\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": false,\r\n                    \"usage\": {\r\n                        \"code\": \"XXDEFAULT\"\r\n                    },\r\n                    \"validFrom\": \"2021-03-25\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Create BP (SP) w/ Service Provider",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner with Service Provider. Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "var jsonData = pm.response.json();\r",
                                                    "if(jsonData && jsonData.id) {\r",
                                                    "    pm.environment.set(\"env_businessPartnerId\", jsonData.id);\r",
                                                    "}"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"displayId\": \"sampleId\",\r\n    \"businessPartnerType\": \"organization\",\r\n    \"organization\": {\r\n        \"nameDetails\": {\r\n            \"formattedOrgNameLine1\": \"sampleOrgName\"\r\n        }\r\n    },\r\n    \"roles\": [\r\n        {\r\n            \"validFrom\": \"2021-03-25\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"role\": {\r\n                \"code\": \"MKK\"\r\n            }\r\n        },\r\n        {\r\n            \"validFrom\": \"2021-03-25\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"role\": {\r\n                \"code\": \"UKM000\"\r\n            }\r\n        }\r\n    ],\r\n    \"serviceProviderInformation\": [\r\n        {\r\n            \"marketFunction\": {\r\n                \"code\": \"SUP001\"\r\n            },\r\n            \"marketFunctionCodeNumber1\": \"{{marketFuncCodeNum1_A}}\",\r\n            \"marketFunctionSource1\": \"ABCD\",\r\n            \"marketFunctionCodeNumber2\": \"{{marketFuncCodeNum2_A}}\",\r\n            \"marketFunctionSource2\": \"DCBA\",\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        },\r\n        {\r\n            \"marketFunction\": {\r\n                \"code\": \"DSO001\"\r\n            },\r\n            \"marketFunctionCodeNumber1\": \"{{marketFuncCodeNum1_B}}\",\r\n            \"marketFunctionSource1\": \"ABCD\",\r\n            \"marketFunctionCodeNumber2\": \"{{marketFuncCodeNum2_B}}\",\r\n            \"marketFunctionSource2\": \"DCBA\",\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ],\r\n    \"isBlocked\": false,\r\n    \"addressData\": [\r\n        {\r\n            \"organizationPostalAddress\": {\r\n                \"houseNumber\": \"houseNumber\",\r\n                \"street\": {\r\n                    \"name\": \"streetName\"\r\n                },\r\n                \"primaryRegion\": {\r\n                    \"code\": \"DL\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"town\"\r\n                },\r\n                \"postCode\": \"postCode\",\r\n                \"companyPostalCode\": \"postCode\"\r\n            }\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Create BP (SP) w/ All fields",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner with Service Provider (with all fields). Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "var jsonData = pm.response.json();\r",
                                                    "if(jsonData && jsonData.id) {\r",
                                                    "    pm.environment.set(\"env_businessPartnerId\", jsonData.id);\r",
                                                    "}"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"displayId\": \"sampleId1\",\r\n    \"businessPartnerType\": \"organization\",\r\n    \"organization\": {\r\n        \"nameDetails\": {\r\n            \"formattedOrgNameLine1\": \"SampleOrg1\",\r\n            \"formattedOrgNameLine2\": \"SampleOrg2\",\r\n            \"formattedOrgNameLine3\": \"SampleOrg3\",\r\n            \"formattedOrgNameLine4\": \"SampleOrg4\"\r\n        }\r\n    },\r\n    \"bankAccounts\": [\r\n        {\r\n            \"id\": \"{{bankAccId_A}}\",\r\n            \"bankAccountName\": \"bankAccountName1\",\r\n            \"bankControlKey\": \"01\",\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\",\r\n            \"bankAccountHolderName\": \"bankAccountHolderName1\",\r\n            \"IBAN\": \"DE18284501231111111111\",\r\n            \"bankAccount\": \"1111111111\",\r\n            \"bankNumber\": \"28450123\",\r\n            \"bankAccountReference\": \"bankAccRef1\",\r\n            \"bankCountry\": {\r\n                \"code\": \"DE\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{bankAccId_B}}\",\r\n            \"bankAccountName\": \"bankAccountName2\",\r\n            \"bankControlKey\": \"02\",\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\",\r\n            \"bankAccountHolderName\": \"bankAccountHolderName2\",\r\n            \"IBAN\": \"DE46230300000001990033\",\r\n            \"bankAccount\": \"bankAccountNumber2\",\r\n            \"bankNumber\": \"23030000\",\r\n            \"bankAccountReference\": \"bankAccRef2\",\r\n            \"bankCountry\": {\r\n                \"code\": \"DE\"\r\n            }\r\n        }\r\n    ],\r\n    \"taxNumbers\": [\r\n        {\r\n            \"taxNumberType\": {\r\n                \"code\": \"DE0\"\r\n            },\r\n            \"taxNumber\": \"987654321\"\r\n        },\r\n        {\r\n            \"taxNumberType\": {\r\n                \"code\": \"US01\"\r\n            },\r\n            \"taxNumber\": \"123456789\"\r\n        }\r\n    ],\r\n    \"roles\": [\r\n        {\r\n            \"role\": {\r\n                \"code\": \"MKK\"\r\n            },\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"UKM000\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"FLCU01\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ],\r\n    \"isBlocked\": false,\r\n    \"addressData\": [\r\n        {\r\n            \"id\": \"{{addressId_A}}\",\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"en\"\r\n                }\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": true,\r\n                    \"usage\": {\r\n                        \"code\": \"XXDEFAULT\"\r\n                    },\r\n                    \"validFrom\": \"2020-12-31\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ],\r\n            \"emailAddresses\": [\r\n                {\r\n                    \"id\": \"{{emailAddId_A_1}}\",\r\n                    \"address\": \"zack.haynes@email.com\"\r\n                },\r\n                {\r\n                    \"id\": \"{{emailAddId_A_2}}\",\r\n                    \"address\": \"katrina.claybourne@email.com\"\r\n                }\r\n            ],\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"id\": \"{{phoneNumId_A_1}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"US\"\r\n                    },\r\n                    \"number\": \"1234567890\",\r\n                    \"numberExtension\": \"123\"\r\n                },\r\n                {\r\n                    \"id\": \"{{phoneNumId_A_2}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"DE\"\r\n                    },\r\n                    \"number\": \"9876543210\",\r\n                    \"numberExtension\": \"321\"\r\n                }\r\n            ],\r\n            \"validFrom\": \"2020-12-31\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"postalAddressType\": \"organizationPostalAddress\",\r\n            \"organizationPostalAddress\": {\r\n                \"street\": {\r\n                    \"name\": \"Dane Street\"\r\n                },\r\n                \"houseNumber\": \"778\",\r\n                \"primaryRegion\": {\r\n                    \"code\": \"WA\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"US\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"Green Bluff\"\r\n                },\r\n                \"postCode\": \"99003\",\r\n                \"streetSuffix1\": \"suffix1 v1\",\r\n                \"streetSuffix2\": \"suffix2 v1\",\r\n                \"companyPostalCode\": \"99003\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{addressId_B}}\",\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"de\"\r\n                }\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": true,\r\n                    \"usage\": {\r\n                        \"code\": \"BILLING\"\r\n                    },\r\n                    \"validFrom\": \"2021-12-31\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ],\r\n            \"emailAddresses\": [\r\n                {\r\n                    \"id\": \"{{emailAddId_B_1}}\",\r\n                    \"address\": \"katrina.claybourne@email.com\"\r\n                },\r\n                {\r\n                    \"id\": \"{{emailAddId_B_2}}\",\r\n                    \"address\": \"patrick.angelil@email.com\"\r\n                }\r\n            ],\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"id\": \"{{phoneNumId_B_1}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"DE\"\r\n                    },\r\n                    \"number\": \"9876543210\",\r\n                    \"numberExtension\": \"321\"\r\n                },\r\n                {\r\n                    \"id\": \"{{phoneNumId_B_2}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"CA\"\r\n                    },\r\n                    \"number\": \"6789543210\",\r\n                    \"numberExtension\": \"132\"\r\n                }\r\n            ],\r\n            \"validFrom\": \"2020-12-31\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"postalAddressType\": \"organizationPostalAddress\",\r\n            \"organizationPostalAddress\": {\r\n                \"street\": {\r\n                    \"name\": \"Genslerstrabe\"\r\n                },\r\n                \"houseNumber\": \"84\",\r\n                \"primaryRegion\": {\r\n                    \"code\": \"BE\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"Berlin Wedding\"\r\n                },\r\n                \"postCode\": \"13359\",\r\n                \"streetSuffix1\": \"suffix1 v2\",\r\n                \"streetSuffix2\": \"suffix2 v2\",\r\n                \"companyPostalCode\": \"13359\"\r\n            }\r\n        }\r\n    ],\r\n    \"customerInformation\": {\r\n        \"salesArrangements\": [\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"00\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName1\"\r\n            },\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"KF\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName2\"\r\n            }\r\n        ],\r\n        \"taxClassifications\": [\r\n            {\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"taxCategory\": {\r\n                    \"code\": \"TTX1\"\r\n                },\r\n                \"taxClassification\": {\r\n                    \"code\": \"1\"\r\n                }\r\n            }\r\n        ],\r\n        \"customerAccountGroup\": {\r\n            \"code\": \"CUST\"\r\n        },\r\n        \"vatLiability\": true\r\n    },\r\n    \"serviceProviderInformation\": [\r\n        {\r\n            \"marketFunction\": {\r\n                \"code\": \"SUP001\"\r\n            },\r\n            \"marketFunctionCodeNumber1\": \"{{marketFuncCodeNum1_A}}\",\r\n            \"marketFunctionSource1\": \"ABCD\",\r\n            \"marketFunctionCodeNumber2\": \"{{marketFuncCodeNum2_A}}\",\r\n            \"marketFunctionSource2\": \"DCBA\",\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        },\r\n        {\r\n            \"marketFunction\": {\r\n                \"code\": \"DSO001\"\r\n            },\r\n            \"marketFunctionCodeNumber1\": \"{{marketFuncCodeNum1_B}}\",\r\n            \"marketFunctionSource1\": \"ABCD\",\r\n            \"marketFunctionCodeNumber2\": \"{{marketFuncCodeNum2_B}}\",\r\n            \"marketFunctionSource2\": \"DCBA\",\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Create BP w/ All fields",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner with Person (with all fields). Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "var jsonData = pm.response.json();\r",
                                                    "if(jsonData && jsonData.id) {\r",
                                                    "    pm.environment.set(\"env_businessPartnerId\", jsonData.id);\r",
                                                    "}\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"displayId\": \"sampleId1\",\r\n    \"businessPartnerType\": \"person\",\r\n    \"person\": {\r\n        \"nameDetails\": {\r\n            \"firstName\": \"Azure5\",\r\n            \"lastName\": \"Haynes\",\r\n            \"academicTitle\": {\r\n                \"code\": \"0004\"\r\n            }\r\n        },\r\n        \"gender\": {\r\n            \"code\": \"0\"\r\n        },\r\n        \"language\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"correspondenceLanguage\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"birthDate\": \"1990-12-31\",\r\n        \"nationality\": {\r\n            \"code\": \"US\"\r\n        }\r\n    },\r\n    \"bankAccounts\": [\r\n        {\r\n            \"id\": \"{{bankAccId_A}}\",\r\n            \"bankAccountName\": \"bankAccountName1\",\r\n            \"bankControlKey\": \"01\",\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\",\r\n            \"bankAccountHolderName\": \"bankAccountHolderName1\",\r\n            \"IBAN\": \"DE18284501231111111111\",\r\n            \"bankAccount\": \"1111111111\",\r\n            \"bankNumber\": \"28450123\",\r\n            \"bankAccountReference\": \"bankAccRef1\",\r\n            \"bankCountry\": {\r\n                \"code\": \"DE\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{bankAccId_B}}\",\r\n            \"bankAccountName\": \"bankAccountName2\",\r\n            \"bankControlKey\": \"02\",\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\",\r\n            \"bankAccountHolderName\": \"bankAccountHolderName2\",\r\n            \"IBAN\": \"DE46230300000001990033\",\r\n            \"bankAccount\": \"bankAccountNumber2\",\r\n            \"bankNumber\": \"23030000\",\r\n            \"bankAccountReference\": \"bankAccRef2\",\r\n            \"bankCountry\": {\r\n                \"code\": \"DE\"\r\n            }\r\n        }\r\n    ],\r\n    \"taxNumbers\": [\r\n        {\r\n            \"taxNumberType\": {\r\n                \"code\": \"DE0\"\r\n            },\r\n            \"taxNumber\": \"987654321\"\r\n        },\r\n        {\r\n            \"taxNumberType\": {\r\n                \"code\": \"US01\"\r\n            },\r\n            \"taxNumber\": \"123456789\"\r\n        }\r\n    ],\r\n    \"roles\": [\r\n        {\r\n            \"role\": {\r\n                \"code\": \"MKK\"\r\n            },\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"UKM000\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"FLCU01\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ],\r\n    \"isBlocked\": false,\r\n    \"addressData\": [\r\n        {\r\n            \"id\": \"{{addressId_A}}\",\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"en\"\r\n                }\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": true,\r\n                    \"usage\": {\r\n                        \"code\": \"XXDEFAULT\"\r\n                    },\r\n                    \"validFrom\": \"2020-12-31\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ],\r\n            \"emailAddresses\": [\r\n                {\r\n                    \"id\": \"{{emailAddId_A_1}}\",\r\n                    \"address\": \"zack.haynes@email.com\"\r\n                },\r\n                {\r\n                    \"id\": \"{{emailAddId_A_2}}\",\r\n                    \"address\": \"katrina.claybourne@email.com\"\r\n                }\r\n            ],\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"id\": \"{{phoneNumId_A_1}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"US\"\r\n                    },\r\n                    \"number\": \"1234567890\",\r\n                    \"numberExtension\": \"123\"\r\n                },\r\n                {\r\n                    \"id\": \"{{phoneNumId_A_2}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"DE\"\r\n                    },\r\n                    \"number\": \"9876543210\",\r\n                    \"numberExtension\": \"321\"\r\n                }\r\n            ],\r\n            \"validFrom\": \"2020-12-31\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"postalAddressType\": \"personPostalAddress\",\r\n            \"personPostalAddress\": {\r\n                \"street\": {\r\n                    \"name\": \"Dane Street\"\r\n                },\r\n                \"houseNumber\": \"778\",\r\n                \"primaryRegion\": {\r\n                    \"code\": \"WA\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"US\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"Green Bluff\"\r\n                },\r\n                \"postCode\": \"99003\",\r\n                \"streetSuffix1\": \"suffix1 v1\",\r\n                \"streetSuffix2\": \"suffix2 v1\",\r\n                \"companyPostalCode\": \"99003\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{addressId_B}}\",\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"de\"\r\n                }\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": true,\r\n                    \"usage\": {\r\n                        \"code\": \"BILLING\"\r\n                    },\r\n                    \"validFrom\": \"2021-12-31\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ],\r\n            \"emailAddresses\": [\r\n                {\r\n                    \"id\": \"{{emailAddId_B_1}}\",\r\n                    \"address\": \"katrina.claybourne@email.com\"\r\n                },\r\n                {\r\n                    \"id\": \"{{emailAddId_B_2}}\",\r\n                    \"address\": \"patrick.angelil@email.com\"\r\n                }\r\n            ],\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"id\": \"{{phoneNumId_B_1}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"DE\"\r\n                    },\r\n                    \"number\": \"9876543210\",\r\n                    \"numberExtension\": \"321\"\r\n                },\r\n                {\r\n                    \"id\": \"{{phoneNumId_B_2}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"CA\"\r\n                    },\r\n                    \"number\": \"6789543210\",\r\n                    \"numberExtension\": \"132\"\r\n                }\r\n            ],\r\n            \"validFrom\": \"2020-12-31\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"postalAddressType\": \"personPostalAddress\",\r\n            \"personPostalAddress\": {\r\n                \"street\": {\r\n                    \"name\": \"Genslerstrabe\"\r\n                },\r\n                \"houseNumber\": \"84\",\r\n                \"primaryRegion\": {\r\n                    \"code\": \"BE\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"Berlin Wedding\"\r\n                },\r\n                \"postCode\": \"13359\",\r\n                \"streetSuffix1\": \"suffix1 v2\",\r\n                \"streetSuffix2\": \"suffix2 v2\",\r\n                \"companyPostalCode\": \"13359\"\r\n            }\r\n        }\r\n    ],\r\n    \"customerInformation\": {\r\n        \"salesArrangements\": [\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"00\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName1\"\r\n            },\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"KF\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName2\"\r\n            }\r\n        ],\r\n        \"taxClassifications\": [\r\n            {\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"taxCategory\": {\r\n                    \"code\": \"TTX1\"\r\n                },\r\n                \"taxClassification\": {\r\n                    \"code\": \"1\"\r\n                }\r\n            }\r\n        ],\r\n        \"customerAccountGroup\": {\r\n            \"code\": \"CUST\"\r\n        },\r\n        \"vatLiability\": true\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ],
                            "event": [
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "const { v4: uuidv4 } = require('uuid');",
                                            "pm.environment.set(\"addressId_A\", uuidv4());",
                                            "pm.environment.set(\"addressId_B\", uuidv4());",
                                            "pm.environment.set(\"addressId_C\", uuidv4());",
                                            "pm.environment.set(\"emailAddId_A_1\", uuidv4());",
                                            "pm.environment.set(\"emailAddId_A_2\", uuidv4());",
                                            "pm.environment.set(\"emailAddId_A_3\", uuidv4());",
                                            "pm.environment.set(\"phoneNumId_A_1\", uuidv4());",
                                            "pm.environment.set(\"phoneNumId_A_2\", uuidv4());",
                                            "pm.environment.set(\"phoneNumId_A_3\", uuidv4());",
                                            "pm.environment.set(\"emailAddId_B_1\", uuidv4());",
                                            "pm.environment.set(\"emailAddId_B_2\", uuidv4());",
                                            "pm.environment.set(\"emailAddId_B_3\", uuidv4());",
                                            "pm.environment.set(\"phoneNumId_B_1\", uuidv4());",
                                            "pm.environment.set(\"phoneNumId_B_2\", uuidv4());",
                                            "pm.environment.set(\"phoneNumId_B_3\", uuidv4());",
                                            "pm.environment.set(\"emailAddId_C_1\", uuidv4());",
                                            "pm.environment.set(\"emailAddId_C_2\", uuidv4());",
                                            "pm.environment.set(\"emailAddId_C_3\", uuidv4());",
                                            "pm.environment.set(\"phoneNumId_C_1\", uuidv4());",
                                            "pm.environment.set(\"phoneNumId_C_2\", uuidv4());",
                                            "pm.environment.set(\"phoneNumId_C_3\", uuidv4());",
                                            "pm.environment.set(\"bankAccId_A\", Math.floor(1000 + Math.random() * 9000));",
                                            "pm.environment.set(\"bankAccId_B\", Math.floor(1000 + Math.random() * 9000));",
                                            "pm.environment.set(\"bankAccId_C\", Math.floor(1000 + Math.random() * 9000));",
                                            "",
                                            "const base = 9903692000000;",
                                            "pm.environment.set(\"marketFuncCodeNum1_A\", base + Math.floor(100000 + Math.random() * 900000));",
                                            "pm.environment.set(\"marketFuncCodeNum2_A\", base + Math.floor(100000 + Math.random() * 900000));",
                                            "pm.environment.set(\"marketFuncCodeNum1_B\", base + Math.floor(100000 + Math.random() * 900000));",
                                            "pm.environment.set(\"marketFuncCodeNum2_B\", base + Math.floor(100000 + Math.random() * 900000));"
                                        ]
                                    }
                                },
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [""]
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Create BP for Delete",
                            "item": [
                                {
                                    "name": "CREATE BP w/ All fields",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner with Person (with all fields). Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "var jsonData = pm.response.json();\r",
                                                    "if(jsonData && jsonData.id) {\r",
                                                    "    pm.environment.set(\"env_businessPartnerId_del\", jsonData.id);\r",
                                                    "}\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [
                                                    "const { v4: uuidv4 } = require('uuid');\r",
                                                    "pm.environment.set(\"addressId_A\", uuidv4());\r",
                                                    "pm.environment.set(\"addressId_B\", uuidv4());\r",
                                                    "pm.environment.set(\"addressId_C\", uuidv4());\r",
                                                    "pm.environment.set(\"emailAddId_A_1\", uuidv4());\r",
                                                    "pm.environment.set(\"emailAddId_A_2\", uuidv4());\r",
                                                    "pm.environment.set(\"emailAddId_A_3\", uuidv4());\r",
                                                    "pm.environment.set(\"phoneNumId_A_1\", uuidv4());\r",
                                                    "pm.environment.set(\"phoneNumId_A_2\", uuidv4());\r",
                                                    "pm.environment.set(\"phoneNumId_A_3\", uuidv4());\r",
                                                    "pm.environment.set(\"emailAddId_B_1\", uuidv4());\r",
                                                    "pm.environment.set(\"emailAddId_B_2\", uuidv4());\r",
                                                    "pm.environment.set(\"emailAddId_B_3\", uuidv4());\r",
                                                    "pm.environment.set(\"phoneNumId_B_1\", uuidv4());\r",
                                                    "pm.environment.set(\"phoneNumId_B_2\", uuidv4());\r",
                                                    "pm.environment.set(\"phoneNumId_B_3\", uuidv4());\r",
                                                    "pm.environment.set(\"emailAddId_C_1\", uuidv4());\r",
                                                    "pm.environment.set(\"emailAddId_C_2\", uuidv4());\r",
                                                    "pm.environment.set(\"emailAddId_C_3\", uuidv4());\r",
                                                    "pm.environment.set(\"phoneNumId_C_1\", uuidv4());\r",
                                                    "pm.environment.set(\"phoneNumId_C_2\", uuidv4());\r",
                                                    "pm.environment.set(\"phoneNumId_C_3\", uuidv4());\r",
                                                    "pm.environment.set(\"bankAccId_A\", Math.floor(1000 + Math.random() * 9000));\r",
                                                    "pm.environment.set(\"bankAccId_B\", Math.floor(1000 + Math.random() * 9000));\r",
                                                    "pm.environment.set(\"bankAccId_C\", Math.floor(1000 + Math.random() * 9000));\r",
                                                    "\r",
                                                    "const base = 9903692000000;\r",
                                                    "pm.environment.set(\"marketFuncCodeNum1_A\", base + Math.floor(100000 + Math.random() * 900000));\r",
                                                    "pm.environment.set(\"marketFuncCodeNum2_A\", base + Math.floor(100000 + Math.random() * 900000));\r",
                                                    "pm.environment.set(\"marketFuncCodeNum1_B\", base + Math.floor(100000 + Math.random() * 900000));\r",
                                                    "pm.environment.set(\"marketFuncCodeNum2_B\", base + Math.floor(100000 + Math.random() * 900000));"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"displayId\": \"sampleId1\",\r\n    \"businessPartnerType\": \"person\",\r\n    \"person\": {\r\n        \"nameDetails\": {\r\n            \"firstName\": \"Azure5\",\r\n            \"lastName\": \"Haynes\",\r\n            \"academicTitle\": {\r\n                \"code\": \"0004\"\r\n            }\r\n        },\r\n        \"gender\": {\r\n            \"code\": \"0\"\r\n        },\r\n        \"language\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"correspondenceLanguage\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"birthDate\": \"1990-12-31\",\r\n        \"nationality\": {\r\n            \"code\": \"US\"\r\n        }\r\n    },\r\n    \"bankAccounts\": [\r\n        {\r\n            \"id\": \"{{bankAccId_A}}\",\r\n            \"bankAccountName\": \"bankAccountName1\",\r\n            \"bankControlKey\": \"01\",\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\",\r\n            \"bankAccountHolderName\": \"bankAccountHolderName1\",\r\n            \"IBAN\": \"DE18284501231111111111\",\r\n            \"bankAccount\": \"1111111111\",\r\n            \"bankNumber\": \"28450123\",\r\n            \"bankAccountReference\": \"bankAccRef1\",\r\n            \"bankCountry\": {\r\n                \"code\": \"DE\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{bankAccId_B}}\",\r\n            \"bankAccountName\": \"bankAccountName2\",\r\n            \"bankControlKey\": \"02\",\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\",\r\n            \"bankAccountHolderName\": \"bankAccountHolderName2\",\r\n            \"IBAN\": \"DE46230300000001990033\",\r\n            \"bankAccount\": \"bankAccountNumber2\",\r\n            \"bankNumber\": \"23030000\",\r\n            \"bankAccountReference\": \"bankAccRef2\",\r\n            \"bankCountry\": {\r\n                \"code\": \"DE\"\r\n            }\r\n        }\r\n    ],\r\n    \"taxNumbers\": [\r\n        {\r\n            \"taxNumberType\": {\r\n                \"code\": \"DE0\"\r\n            },\r\n            \"taxNumber\": \"987654321\"\r\n        },\r\n        {\r\n            \"taxNumberType\": {\r\n                \"code\": \"US01\"\r\n            },\r\n            \"taxNumber\": \"123456789\"\r\n        }\r\n    ],\r\n    \"roles\": [\r\n        {\r\n            \"role\": {\r\n                \"code\": \"MKK\"\r\n            },\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"UKM000\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"FLCU01\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ],\r\n    \"isBlocked\": false,\r\n    \"addressData\": [\r\n        {\r\n            \"id\": \"{{addressId_A}}\",\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"en\"\r\n                }\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": true,\r\n                    \"usage\": {\r\n                        \"code\": \"XXDEFAULT\"\r\n                    },\r\n                    \"validFrom\": \"2020-12-31\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ],\r\n            \"emailAddresses\": [\r\n                {\r\n                    \"id\": \"{{emailAddId_A_1}}\",\r\n                    \"address\": \"zack.haynes@email.com\"\r\n                },\r\n                {\r\n                    \"id\": \"{{emailAddId_A_2}}\",\r\n                    \"address\": \"katrina.claybourne@email.com\"\r\n                }\r\n            ],\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"id\": \"{{phoneNumId_A_1}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"US\"\r\n                    },\r\n                    \"number\": \"1234567890\",\r\n                    \"numberExtension\": \"123\"\r\n                },\r\n                {\r\n                    \"id\": \"{{phoneNumId_A_2}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"DE\"\r\n                    },\r\n                    \"number\": \"9876543210\",\r\n                    \"numberExtension\": \"321\"\r\n                }\r\n            ],\r\n            \"validFrom\": \"2020-12-31\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"postalAddressType\": \"personPostalAddress\",\r\n            \"personPostalAddress\": {\r\n                \"street\": {\r\n                    \"name\": \"Dane Street\"\r\n                },\r\n                \"houseNumber\": \"778\",\r\n                \"primaryRegion\": {\r\n                    \"code\": \"WA\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"US\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"Green Bluff\"\r\n                },\r\n                \"postCode\": \"99003\",\r\n                \"streetSuffix1\": \"suffix1 v1\",\r\n                \"streetSuffix2\": \"suffix2 v1\",\r\n                \"companyPostalCode\": \"99003\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{addressId_B}}\",\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"de\"\r\n                }\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": true,\r\n                    \"usage\": {\r\n                        \"code\": \"BILLING\"\r\n                    },\r\n                    \"validFrom\": \"2021-12-31\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ],\r\n            \"emailAddresses\": [\r\n                {\r\n                    \"id\": \"{{emailAddId_B_1}}\",\r\n                    \"address\": \"katrina.claybourne@email.com\"\r\n                },\r\n                {\r\n                    \"id\": \"{{emailAddId_B_2}}\",\r\n                    \"address\": \"patrick.angelil@email.com\"\r\n                }\r\n            ],\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"id\": \"{{phoneNumId_B_1}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"DE\"\r\n                    },\r\n                    \"number\": \"9876543210\",\r\n                    \"numberExtension\": \"321\"\r\n                },\r\n                {\r\n                    \"id\": \"{{phoneNumId_B_2}}\",\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"CA\"\r\n                    },\r\n                    \"number\": \"6789543210\",\r\n                    \"numberExtension\": \"132\"\r\n                }\r\n            ],\r\n            \"validFrom\": \"2020-12-31\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"postalAddressType\": \"personPostalAddress\",\r\n            \"personPostalAddress\": {\r\n                \"street\": {\r\n                    \"name\": \"Genslerstrabe\"\r\n                },\r\n                \"houseNumber\": \"84\",\r\n                \"primaryRegion\": {\r\n                    \"code\": \"BE\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"Berlin Wedding\"\r\n                },\r\n                \"postCode\": \"13359\",\r\n                \"streetSuffix1\": \"suffix1 v2\",\r\n                \"streetSuffix2\": \"suffix2 v2\",\r\n                \"companyPostalCode\": \"13359\"\r\n            }\r\n        }\r\n    ],\r\n    \"customerInformation\": {\r\n        \"salesArrangements\": [\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"00\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName1\"\r\n            },\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"KF\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName2\"\r\n            }\r\n        ],\r\n        \"taxClassifications\": [\r\n            {\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"taxCategory\": {\r\n                    \"code\": \"TTX1\"\r\n                },\r\n                \"taxClassification\": {\r\n                    \"code\": \"1\"\r\n                }\r\n            }\r\n        ],\r\n        \"customerAccountGroup\": {\r\n            \"code\": \"CUST\"\r\n        },\r\n        \"vatLiability\": true\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Create 2 BPs - Batch payload",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                            "\r",
                                            "pm.test(`Create batch Business Partner. Successful BATCH POST request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "protocolProfileBehavior": {
                                "disabledSystemHeaders": {
                                    "content-type": true
                                }
                            },
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/mixed;boundary=batch_36522ad7-fc75-4b56-8c71-56071383e77b",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Type: application/http\r\nContent-Transfer-Encoding:binary\r\n\r\nGET /BusinessPartner(3499eadc-e679-4be9-82c4-342664ac1bd5)\r\nHost: host\r\n\r\n\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Type: multipart/mixed;boundary=changeset_77162fcd-b8da-41ac-a9f8-9357efbbd\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd\r\nContent-Type: application/http\r\nContent-Transfer-Encoding: binary\r\nContent-ID: 1\r\n\r\nPOST /BusinessPartner\r\nHost: host \r\nContent-Type: application/json;type=entry\r\nContent-Length: 1250\r\n\r\n{\r\n    \"displayId\": \"sampleId2\",\r\n    \"businessPartnerType\": \"person\",\r\n    \"person\": {\r\n        \"nameDetails\": {\r\n            \"firstName\": \"firstName\",\r\n            \"middleName\": \"middleName\",\r\n            \"lastName\": \"lastName\"\r\n        },\r\n        \"gender\": {\r\n            \"code\": \"0\"\r\n        },\r\n        \"language\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"correspondenceLanguage\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"birthDate\": \"1990-12-31\",\r\n        \"nationality\": {\r\n            \"code\": \"DE\"\r\n        }\r\n    },\r\n    \"roles\": [\r\n        {\r\n            \"role\": {\r\n                \"code\": \"000000\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ],\r\n    \"isBlocked\": false,\r\n    \"addressData\": [\r\n        {\r\n            \"personPostalAddress\": {\r\n                \"houseNumber\": \"houseNumber\",\r\n                \"street\": {\r\n                    \"name\": \"streetName\"\r\n                },\r\n                \"primaryRegion\": {\r\n                    \"code\": \"DL\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"town\"\r\n                },\r\n                \"postCode\": \"postCode\",\r\n                \"companyPostalCode\": \"postCode\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd\r\nContent-Type: application/http\r\nContent-Transfer-Encoding: binary\r\nContent-ID: 2\r\n\r\nPOST /BusinessPartner\r\nHost: host \r\nContent-Type: application/json;type=entry\r\nContent-Length: 941\r\n\r\n{\r\n    \"displayId\": \"sampleId\",\r\n    \"businessPartnerType\": \"organization\",\r\n    \"organization\": {\r\n        \"nameDetails\": {\r\n            \"formattedOrgNameLine1\": \"sampleOrgName\"\r\n        }\r\n    },\r\n    \"roles\": [\r\n        {\r\n            \"role\": {\r\n                \"code\": \"000000\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ],\r\n    \"isBlocked\": false,\r\n    \"addressData\": [\r\n        {\r\n            \"organizationPostalAddress\": {\r\n                \"houseNumber\": \"houseNumber\",\r\n                \"street\": {\r\n                    \"name\": \"streetName\"\r\n                },\r\n                \"primaryRegion\": {\r\n                    \"code\": \"DL\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"town\"\r\n                },\r\n                \"postCode\": \"postCode\",\r\n                \"companyPostalCode\": \"postCode\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd--\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Type: application/http\r\nContent-Transfer-Encoding:binary\r\n\r\nGET /BusinessPartner(3499eadc-e679-4be9-82c4-342664ac1bd5)/person/nameDetails\r\nHost: host\r\n\r\n\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/$batch",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-bp}}", "$batch"]
                                }
                            },
                            "response": []
                        }
                    ],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        }
                    ]
                },
                {
                    "name": "READ",
                    "item": [
                        {
                            "name": "Search",
                            "item": [
                                {
                                    "name": "BP filter w/ UUID",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner with filter - UUID. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner?$filter=id eq {{env_businessPartnerId}}",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$filter",
                                                    "value": "id eq {{env_businessPartnerId}}"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "BP filter w/ first name",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner with filter - first name. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner?$filter=person/nameDetails/firstName eq 'firstName'",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$filter",
                                                    "value": "person/nameDetails/firstName eq 'firstName'"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "BP filter w/ last name",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner with filter - last name. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner?$filter=person/nameDetails/lastName eq 'lastName'",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$filter",
                                                    "value": "person/nameDetails/lastName eq 'lastName'"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "BP filter w/ full name",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner with filter - full name. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner?$filter=person/nameDetails/firstName eq 'firstName' and person/nameDetails/lastName eq 'lastName'",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$filter",
                                                    "value": "person/nameDetails/firstName eq 'firstName' and person/nameDetails/lastName eq 'lastName'"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "SP filter w/ market function",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner with filter - market function. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner?$filter=serviceProviderInformation/any(n:n/marketFunction/code eq 'SUP001')&$expand=serviceProviderInformation&$count=true",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$filter",
                                                    "value": "serviceProviderInformation/any(n:n/marketFunction/code eq 'SUP001')"
                                                },
                                                {
                                                    "key": "$expand",
                                                    "value": "serviceProviderInformation"
                                                },
                                                {
                                                    "key": "$count",
                                                    "value": "true"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "SP filter w/ market function code number",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner with filter - market function code number. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner?$filter=serviceProviderInformation/any(n:n/marketFunctionCodeNumber1 eq '9903692000001' or n/marketFunctionCodeNumber2 eq '9903692000001')&$expand=serviceProviderInformation&$count=true",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$filter",
                                                    "value": "serviceProviderInformation/any(n:n/marketFunctionCodeNumber1 eq '9903692000001' or n/marketFunctionCodeNumber2 eq '9903692000001')"
                                                },
                                                {
                                                    "key": "$expand",
                                                    "value": "serviceProviderInformation"
                                                },
                                                {
                                                    "key": "$count",
                                                    "value": "true"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "BP search w/ email address",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner with filter - email address. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartnerSearch?$filter=emailAddress eq 'test@sap.com'",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartnerSearch"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$filter",
                                                    "value": "emailAddress eq 'test@sap.com'"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "BookKeeping",
                            "item": [
                                {
                                    "name": "Read BookKeeping w/ UUID",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner bookkeeping with filter - UUID. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartnerBookKeeping({{env_businessPartnerId}})?$expand=mdiBookKeeping",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartnerBookKeeping({{env_businessPartnerId}})"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$expand",
                                                    "value": "mdiBookKeeping"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "READ $metadata",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                            "\r",
                                            "pm.test(`Read Business Partner metadata. Successful GET request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            },
                            "request": {
                                "method": "GET",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/$metadata",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-bp}}", "$metadata"]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ BP",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                            "\r",
                                            "pm.test(`Read Business Partners. Successful GET request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "exec": [""],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            },
                            "request": {
                                "method": "GET",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-bp}}", "BusinessPartner"]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ BP w/ All fields",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                            "\r",
                                            "pm.test(`Read Business Partners. Successful GET request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "exec": [""],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            },
                            "request": {
                                "method": "GET",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner?$expand=person($expand=nameDetails),organization($expand=nameDetails),roles,bankAccounts,taxNumbers,addressData($expand=usages,personPostalAddress,organizationPostalAddress),customerInformation($expand=salesArrangements($expand=functions),taxClassifications),serviceProviderInformation",
                                    "host": ["{{url}}"],
                                    "path": ["{{api-bp}}", "BusinessPartner"],
                                    "query": [
                                        {
                                            "key": "$expand",
                                            "value": "person($expand=nameDetails),organization($expand=nameDetails),roles,bankAccounts,taxNumbers,addressData($expand=usages,personPostalAddress,organizationPostalAddress),customerInformation($expand=salesArrangements($expand=functions),taxClassifications),serviceProviderInformation"
                                        }
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "READ BP by UUID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                            "\r",
                                            "pm.test(`Read Business Partner with UUID. Successful GET request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                            "});\r",
                                            ""
                                        ],
                                        "type": "text/javascript"
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "exec": [""],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            },
                            "request": {
                                "method": "GET",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})?$expand=person($expand=nameDetails),organization($expand=nameDetails),bankAccounts,taxNumbers($expand=taxNumberType),addressData($expand=usages,personPostalAddress,organizationPostalAddress,emailAddresses,phoneNumbers),roles($expand=role),customerInformation($expand=salesArrangements($expand=functions),taxClassifications),serviceProviderInformation",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId}})"
                                    ],
                                    "query": [
                                        {
                                            "key": "$expand",
                                            "value": "organization($expand=nameDetails)",
                                            "disabled": true
                                        },
                                        {
                                            "key": "$expand",
                                            "value": "person($expand=nameDetails),organization($expand=nameDetails),bankAccounts,taxNumbers($expand=taxNumberType),addressData($expand=usages,personPostalAddress,organizationPostalAddress,emailAddresses,phoneNumbers),roles($expand=role),customerInformation($expand=salesArrangements($expand=functions),taxClassifications),serviceProviderInformation"
                                        }
                                    ]
                                }
                            },
                            "response": []
                        }
                    ],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        }
                    ]
                },
                {
                    "name": "UPDATE",
                    "item": [
                        {
                            "name": "Read BP for Update",
                            "item": [
                                {
                                    "name": "READ BP w/ All fields",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner with UUID. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "var jsonData = pm.response.json();\r",
                                                    "\r",
                                                    "pm.environment.set(\"taxNumCode_A\", jsonData.taxNumbers[0].taxNumberType.code);\r",
                                                    "pm.environment.set(\"taxNumCode_B\", jsonData.taxNumbers[1].taxNumberType.code);\r",
                                                    "\r",
                                                    "pm.environment.set(\"bankAccId_A\", jsonData.bankAccounts[0].id);\r",
                                                    "pm.environment.set(\"bankAccId_B\", jsonData.bankAccounts[1].id);\r",
                                                    "\r",
                                                    "pm.environment.set(\"roleCode_A\", jsonData.roles[0].role.code);\r",
                                                    "pm.environment.set(\"roleCode_B\", jsonData.roles[1].role.code);\r",
                                                    "\r",
                                                    "if (jsonData.addressData[0].usages.filter(u => u.usage.code === 'XXDEFAULT').length > 0) {\r",
                                                    "    pm.environment.set(\"addressId_required\", jsonData.addressData[0].id);\r",
                                                    "} else {\r",
                                                    "    pm.environment.set(\"addressId_required\", jsonData.addressData[1].id);\r",
                                                    "}\r",
                                                    "\r",
                                                    "pm.environment.set(\"addressId_A\", jsonData.addressData[0].id);\r",
                                                    "pm.environment.set(\"addressId_B\", jsonData.addressData[1].id);\r",
                                                    "\r",
                                                    "pm.environment.set(\"usageCode_A_1\", jsonData.addressData[0].usages[0].usage.code);\r",
                                                    "pm.environment.set(\"validTo_A_1\", jsonData.addressData[0].usages[0].validTo);\r",
                                                    "\r",
                                                    "pm.environment.set(\"emailAddId_A_1\", jsonData.addressData[0].emailAddresses[0].id);\r",
                                                    "pm.environment.set(\"emailAddId_A_2\", jsonData.addressData[0].emailAddresses[1].id);\r",
                                                    "\r",
                                                    "pm.environment.set(\"phoneNumId_A_1\", jsonData.addressData[0].phoneNumbers[0].id);\r",
                                                    "pm.environment.set(\"phoneNumId_A_2\", jsonData.addressData[0].phoneNumbers[1].id);\r",
                                                    "\r",
                                                    "pm.environment.set(\"salesOrgDisplayId_A\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.salesOrganizationDisplayId);\r",
                                                    "pm.environment.set(\"distChannel_A\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.distributionChannel);\r",
                                                    "pm.environment.set(\"div_A\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.division);\r",
                                                    "\r",
                                                    "pm.environment.set(\"salesOrgDisplayId_B\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.salesOrganizationDisplayId);\r",
                                                    "pm.environment.set(\"distChannel_B\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.distributionChannel);\r",
                                                    "pm.environment.set(\"div_B\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.division);\r",
                                                    "\r",
                                                    "pm.environment.set(\"funcName_A_1\", jsonData.customerInformation.salesArrangements[0].functions[0].functionName);\r",
                                                    "pm.environment.set(\"funcName_A_2\", jsonData.customerInformation.salesArrangements[0].functions[1].functionName);\r",
                                                    "\r",
                                                    "pm.environment.set(\"funcName_B_1\", jsonData.customerInformation.salesArrangements[1].functions[0].functionName);\r",
                                                    "pm.environment.set(\"funcName_B_2\", jsonData.customerInformation.salesArrangements[1].functions[1].functionName);\r",
                                                    "\r",
                                                    "pm.environment.set(\"taxClass_countryCode_A\", jsonData.customerInformation.taxClassifications[0].country.code);\r",
                                                    "pm.environment.set(\"taxClass_taxCatCode_A\", jsonData.customerInformation.taxClassifications[0].taxCategory.code);\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})?$expand=person($expand=nameDetails),organization($expand=nameDetails),bankAccounts,taxNumbers($expand=taxNumberType),addressData($expand=usages,personPostalAddress,organizationPostalAddress,emailAddresses,phoneNumbers),roles($expand=role),customerInformation($expand=salesArrangements($expand=functions),taxClassifications),serviceProviderInformation",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$expand",
                                                    "value": "organization($expand=nameDetails)",
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "$expand",
                                                    "value": "person($expand=nameDetails),organization($expand=nameDetails),bankAccounts,taxNumbers($expand=taxNumberType),addressData($expand=usages,personPostalAddress,organizationPostalAddress,emailAddresses,phoneNumbers),roles($expand=role),customerInformation($expand=salesArrangements($expand=functions),taxClassifications),serviceProviderInformation"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Read BookKeeping w/ UUID",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner bookkeeping with filter - UUID. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "    const jsonData = pm.response.json();\r",
                                                    "    pm.expect(jsonData.mdiBookKeeping).to.exist;\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartnerBookKeeping({{env_businessPartnerId}})?$expand=mdiBookKeeping",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartnerBookKeeping({{env_businessPartnerId}})"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$expand",
                                                    "value": "mdiBookKeeping"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Update person of BP",
                            "item": [
                                {
                                    "name": "UPDATE BP/person",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's person. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"gender\": {\r\n        \"code\": \"0\"\r\n    },\r\n    \"language\": {\r\n        \"code\": \"en\"\r\n    },\r\n    \"correspondenceLanguage\": {\r\n        \"code\": \"en\"\r\n    },\r\n    \"birthDate\": \"1990-12-31\",\r\n    \"nationality\": {\r\n        \"code\": \"US\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/person",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "person"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/person",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's person. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"correspondenceLanguage\": {\r\n        \"code\": \"en\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/person",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "person"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/person/nameDetails",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's person. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"firstName\": \"updated-firstName-2\",\r\n    \"lastName\": \"updated-lastName-2\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/person/nameDetails",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "person",
                                                "nameDetails"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/person/nameDetails",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's person. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"lastName\": \"updated-lastName-3\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/person/nameDetails",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "person",
                                                "nameDetails"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ person nameDetails)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's person. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"businessPartnerType\": \"person\",\r\n    \"isBlocked\": false,\r\n    \"person\": {\r\n        \"nameDetails\": {\r\n            \"firstName\": \"updated-firstName-4\",\r\n            \"lastName\": \"updated-lastName-4\"\r\n        },\r\n        \"gender\": {\r\n            \"code\": \"0\"\r\n        },\r\n        \"language\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"correspondenceLanguage\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"birthDate\": \"1990-12-31\",\r\n        \"nationality\": {\r\n            \"code\": \"US\"\r\n        }\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ person nameDetails)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's person. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"person\": {\r\n        \"nameDetails\": {\r\n            \"lastName\": \"updated-lastName-5\"\r\n        }\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ person)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's person. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"businessPartnerType\": \"person\",\r\n    \"isBlocked\": false,\r\n    \"person\": {\r\n        \"gender\": {\r\n            \"code\": \"0\"\r\n        },\r\n        \"language\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"correspondenceLanguage\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"birthDate\": \"1990-12-31\",\r\n        \"nationality\": {\r\n            \"code\": \"US\"\r\n        }\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ person)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's person. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"person\": {\r\n        \"correspondenceLanguage\": {\r\n            \"code\": \"en\"\r\n        }\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Update bankAccounts of BP",
                            "item": [
                                {
                                    "name": "UPDATE BP/bankAccount",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's bank account. Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"bankAccountName\": \"bankAccountName3\",\r\n    \"bankControlKey\": \"03\",\r\n    \"validFrom\": \"2020-01-03\",\r\n    \"validTo\": \"2020-12-31\",\r\n    \"bankAccountHolderName\": \"bankAccountHolderName3\",\r\n    \"IBAN\": \"IBAN1\",\r\n    \"bankAccount\": \"bankAccountNumber3\",\r\n    \"bankNumber\": \"21112018\",\r\n    \"bankAccountReference\": \"bankAccRef3\",\r\n    \"bankCountry\": {\r\n        \"code\": \"CA\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/bankAccounts(id='{{bankAccId_A}}')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "bankAccounts(id='{{bankAccId_A}}')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/bankAccount",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's bank account. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"bankAccountName\": \"bankAccountName4\",\r\n    \"bankAccount\": \"bankAccountNumber4\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/bankAccounts(id='{{bankAccId_A}}')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "bankAccounts(id='{{bankAccId_A}}')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/bankAccount",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner's bank account. Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"id\": \"0001\",\r\n    \"bankAccountName\": \"bankAccountName0\",\r\n    \"bankControlKey\": \"00\",\r\n    \"validFrom\": \"2020-01-01\",\r\n    \"validTo\": \"2020-12-31\",\r\n    \"bankAccountHolderName\": \"bankAccountHolderName0\",\r\n    \"IBAN\": \"IBAN1\",\r\n    \"bankAccount\": \"bankAccountNumber0\",\r\n    \"bankNumber\": \"21112018\",\r\n    \"bankAccountReference\": \"bankAccRef0\",\r\n    \"bankCountry\": {\r\n        \"code\": \"CA\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/bankAccounts",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "bankAccounts"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ bankAccounts)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's bank account. Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"businessPartnerType\": \"person\",\r\n    \"isBlocked\": false,\r\n    \"bankAccounts\": [\r\n        {\r\n            \"id\": \"{{bankAccId_A}}\",\r\n            \"bankAccountName\": \"bankAccountName1\",\r\n            \"bankControlKey\": \"01\",\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\",\r\n            \"bankAccountHolderName\": \"bankAccountHolderName1\",\r\n            \"IBAN\": \"IBAN1\",\r\n            \"bankAccount\": \"bankAccountNumber1\",\r\n            \"bankNumber\": \"21112018\",\r\n            \"bankAccountReference\": \"bankAccRef1\",\r\n            \"bankCountry\": {\r\n                \"code\": \"CA\"\r\n            }\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ bankAccounts)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's bank account. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"bankAccounts\": [\r\n        {\r\n            \"id\": \"{{bankAccId_A}}\",\r\n            \"bankAccountName\": \"bankAccountName2\",\r\n            \"bankControlKey\": \"02\",\r\n            \"validFrom\": \"2020-01-02\",\r\n            \"validTo\": \"2020-12-31\",\r\n            \"bankAccountHolderName\": \"bankAccountHolderName2\",\r\n            \"IBAN\": \"IBAN1\",\r\n            \"bankAccount\": \"bankAccountNumber2\",\r\n            \"bankNumber\": \"21112018\",\r\n            \"bankAccountReference\": \"bankAccRef2\",\r\n            \"bankCountry\": {\r\n                \"code\": \"CA\"\r\n            }\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Update taxNumbers of BP",
                            "item": [
                                {
                                    "name": "UPDATE BP/taxNumbers",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's tax number. Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"taxNumber\": \"321321321\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/taxNumbers(code='US01')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "taxNumbers(code='US01')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/taxNumbers",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's tax number. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"taxNumber\": \"123123123\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/taxNumbers(code='US01')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "taxNumbers(code='US01')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/taxNumbers",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner's tax number. Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"taxNumberType\": {\r\n        \"code\": \"CA1\"\r\n    },\r\n    \"taxNumber\": \"321321321\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/taxNumbers",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "taxNumbers"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ taxNumbers)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's tax number. Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"businessPartnerType\": \"person\",\r\n    \"isBlocked\": false,\r\n    \"taxNumbers\": [\r\n        {\r\n            \"taxNumberType\": {\r\n                \"code\": \"US01\"\r\n            },\r\n            \"taxNumber\": \"123456789\"\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ taxNumbers)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's tax number. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"taxNumbers\": [\r\n        {\r\n            \"taxNumberType\": {\r\n                \"code\": \"US01\"\r\n            },\r\n            \"taxNumber\": \"123456789\"\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Update roles of BP",
                            "item": [
                                {
                                    "name": "UPDATE BP/roles",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's role. Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"validFrom\": \"2020-01-01\",\r\n    \"validTo\": \"2030-12-31\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/roles(code='MKK')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "roles(code='MKK')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/roles",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's role. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"validTo\": \"2040-12-31\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/roles(code='MKK')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "roles(code='MKK')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/roles",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner's role. Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"role\": {\r\n        \"code\": \"FLCU00\"\r\n    },\r\n    \"validFrom\": \"2021-01-01\",\r\n    \"validTo\": \"2021-12-31\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/roles",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "roles"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ roles)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-manage-deletions')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's role. Receive \"Cannot DELETE roles\" ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"businessPartnerType\": \"person\",\r\n    \"isBlocked\": false,\r\n    \"roles\": [\r\n        {\r\n            \"role\": {\r\n                \"code\": \"MKK\"\r\n            },\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"UKM000\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"FLCU01\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ roles)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-manage-deletions')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's role. Receive \"Cannot DELETE roles\" ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"roles\": [\r\n        {\r\n            \"role\": {\r\n                \"code\": \"MKK\"\r\n            },\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"UKM000\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"FLCU01\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Update addressData of BP",
                            "item": [
                                {
                                    "name": "UPDATE BP/addressData",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"validFrom\": \"2020-12-31\",\r\n    \"validTo\": \"9999-12-31\",\r\n    \"postalAddressType\": \"personPostalAddress\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/addressData",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"validTo\": \"9999-12-31\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/addressData",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner's address . Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"communicationPreferences\": {\r\n        \"nonVerbalCommunicationLanguage\": {\r\n            \"code\": \"de\"\r\n        }\r\n    },\r\n    \"usages\": [\r\n        {\r\n            \"isStandard\": true,\r\n            \"usage\": {\r\n                \"code\": \"BILLING\"\r\n            },\r\n            \"validFrom\": \"2021-12-31\",\r\n            \"validTo\": \"9999-12-31\"\r\n        }\r\n    ],\r\n    \"emailAddresses\": [\r\n        {\r\n            \"address\": \"katrina.claybourne2@email.com\"\r\n        },\r\n        {\r\n            \"address\": \"patrick.angelil2@email.com\"\r\n        }\r\n    ],\r\n    \"phoneNumbers\": [\r\n        {\r\n            \"isMobile\": true,\r\n            \"country\": {\r\n                \"code\": \"DE\"\r\n            },\r\n            \"number\": \"9876543211\",\r\n            \"numberExtension\": \"321\"\r\n        },\r\n        {\r\n            \"isMobile\": true,\r\n            \"country\": {\r\n                \"code\": \"CA\"\r\n            },\r\n            \"number\": \"6789543212\",\r\n            \"numberExtension\": \"132\"\r\n        }\r\n    ],\r\n    \"validFrom\": \"2020-12-31\",\r\n    \"validTo\": \"9999-12-31\",\r\n    \"postalAddressType\": \"personPostalAddress\",\r\n    \"personPostalAddress\": {\r\n        \"street\": {\r\n            \"name\": \"Genslerstrabe\"\r\n        },\r\n        \"houseNumber\": \"120\",\r\n        \"primaryRegion\": {\r\n            \"code\": \"BE\"\r\n        },\r\n        \"country\": {\r\n            \"code\": \"DE\"\r\n        },\r\n        \"town\": {\r\n            \"name\": \"Berlin Wedding\"\r\n        },\r\n        \"postCode\": \"13360\",\r\n        \"streetSuffix1\": \"suffix1 v2\",\r\n        \"streetSuffix2\": \"suffix2 v2\",\r\n        \"companyPostalCode\": \"13360\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/addressData/personPostalAddress",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"houseNumber\": \"790\",\r\n    \"primaryRegion\": {\r\n        \"code\": \"WA\"\r\n    },\r\n    \"country\": {\r\n        \"code\": \"US\"\r\n    },\r\n    \"postCode\": \"99005\",\r\n    \"streetSuffix1\": \"suffix1 v2\",\r\n    \"streetSuffix2\": \"suffix2 v2\",\r\n    \"companyPostalCode\": \"99003\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/personPostalAddress",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "personPostalAddress"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/addressData/personPostalAddress",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"houseNumber\": \"800\",\r\n    \"streetSuffix1\": \"suffix1 v3\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/personPostalAddress",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "personPostalAddress"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/addressData/usages",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"isStandard\": true,\r\n    \"validFrom\": \"2030-12-31\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/usages(code='XXDEFAULT',validTo=9999-12-31)",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "usages(code='XXDEFAULT',validTo=9999-12-31)"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/addressData/usages",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"validFrom\": \"2040-12-31\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/usages(code='XXDEFAULT',validTo=9999-12-31)",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "usages(code='XXDEFAULT',validTo=9999-12-31)"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/addressData/usages",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner's address . Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"usage\": {\r\n        \"code\": \"BILLING\"\r\n    },\r\n    \"isStandard\": true,\r\n    \"validFrom\": \"2030-12-31\",\r\n    \"validTo\": \"2050-12-31\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/usages",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "usages"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/addressData/emailAddresses",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"address\": \"zack.haynes2@email.com\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/emailAddresses({{emailAddId_A_1}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "emailAddresses({{emailAddId_A_1}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/addressData/emailAddresses",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"address\": \"zack.haynes3@email.com\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/emailAddresses({{emailAddId_A_1}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "emailAddresses({{emailAddId_A_1}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/addressData/emailAddresses",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner's address . Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"address\": \"zack.haynes5@email.com\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/emailAddresses",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "emailAddresses"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/addressData/phoneNumbers",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"isMobile\": true,\r\n    \"country\": {\r\n        \"code\": \"US\"\r\n    },\r\n    \"number\": \"321321321\",\r\n    \"numberExtension\": \"321\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/phoneNumbers({{phoneNumId_A_1}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "phoneNumbers({{phoneNumId_A_1}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/addressData/phoneNumbers",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address . Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"number\": \"123123123\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/phoneNumbers({{phoneNumId_A_1}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "phoneNumbers({{phoneNumId_A_1}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/addressData/phoneNumbers",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner's address . Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"isMobile\": true,\r\n    \"country\": {\r\n        \"code\": \"US\"\r\n    },\r\n    \"number\": \"1122334455\",\r\n    \"numberExtension\": \"111\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/addressData({{addressId_A}})/phoneNumbers",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "addressData({{addressId_A}})",
                                                "phoneNumbers"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ addressData)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-manage-deletions')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address. Receive \"Cannot DELETE addressData\" ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"businessPartnerType\": \"person\",\r\n    \"isBlocked\": false,\r\n    \"addressData\": [\r\n        {\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"en\"\r\n                }\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": false,\r\n                    \"usage\": {\r\n                        \"code\": \"XXDEFAULT\"\r\n                    },\r\n                    \"validFrom\": \"2020-12-31\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ],\r\n            \"emailAddresses\": [\r\n                {\r\n                    \"address\": \"zack.haynes@email.com\"\r\n                }\r\n            ],\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"US\"\r\n                    },\r\n                    \"number\": \"1234567890\",\r\n                    \"numberExtension\": \"123\"\r\n                }\r\n            ],\r\n            \"validFrom\": \"2020-12-31\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"postalAddressType\": \"personPostalAddress\",\r\n            \"personPostalAddress\": {\r\n                \"street\": {\r\n                    \"name\": \"Dane Street\"\r\n                },\r\n                \"houseNumber\": \"778\",\r\n                \"primaryRegion\": {\r\n                    \"code\": \"WA\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"US\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"Green Bluff\"\r\n                },\r\n                \"postCode\": \"99003\",\r\n                \"streetSuffix1\": \"suffix1 v1\",\r\n                \"streetSuffix2\": \"suffix2 v1\",\r\n                \"companyPostalCode\": \"99003\"\r\n            }\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ addressData)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-manage-deletions')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's address. Receive \"Cannot DELETE addressData\" ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"addressData\": [\r\n        {\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"en\"\r\n                }\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": false,\r\n                    \"usage\": {\r\n                        \"code\": \"XXDEFAULT\"\r\n                    },\r\n                    \"validFrom\": \"2020-12-31\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ],\r\n            \"emailAddresses\": [\r\n                {\r\n                    \"address\": \"zack.haynes@email.com\"\r\n                }\r\n            ],\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"US\"\r\n                    },\r\n                    \"number\": \"1234567890\",\r\n                    \"numberExtension\": \"123\"\r\n                }\r\n            ],\r\n            \"validFrom\": \"2020-12-31\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"postalAddressType\": \"personPostalAddress\",\r\n            \"personPostalAddress\": {\r\n                \"street\": {\r\n                    \"name\": \"Dane Street\"\r\n                },\r\n                \"houseNumber\": \"778\",\r\n                \"primaryRegion\": {\r\n                    \"code\": \"WA\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"US\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"Green Bluff\"\r\n                },\r\n                \"postCode\": \"99003\",\r\n                \"streetSuffix1\": \"suffix1 v1\",\r\n                \"streetSuffix2\": \"suffix2 v1\",\r\n                \"companyPostalCode\": \"99003\"\r\n            }\r\n        }\r\n    ]\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Update customerInformation of BP",
                            "item": [
                                {
                                    "name": "UPDATE BP/customerInformation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's customer information. Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"vatLiability\": true,\r\n    \"customerAccountGroup\": {\r\n        \"code\": \"FICA\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/customerInformation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's customer information. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "postman.setNextRequest(\"CREATE BP/customerInformation/salesArrangements/functions\");"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"vatLiability\": false\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/customerInformation/salesArrangements",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "// TODO Current CDS 5.4.6 not support for this test\r",
                                                    "// TODO Test after upgrade to latest CDS (5.5.x)\r",
                                                    "\r",
                                                    "// const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "// pm.test(`Update Business Partner's customer information. Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "//     pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "// });\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"incotermsTransferLocationName\": \"FH\",\r\n    \"deliveryPriority\": {\r\n        \"code\": \"02\"\r\n    },\r\n    \"currency\": {\r\n        \"code\": \"EUR\"\r\n    },\r\n    \"salesArrangementGroup\": {\r\n        \"code\": \"01\"\r\n    },\r\n    \"salesArrangementPriceGroup\": {\r\n        \"code\": \"C1\"\r\n    },\r\n    \"incotermsClassification\": {\r\n        \"code\": \"FH\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation/salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation",
                                                "salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/customerInformation/salesArrangements",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "// TODO Current CDS 5.4.6 not support for this test\r",
                                                    "// TODO Test after upgrade to latest CDS (5.5.x)\r",
                                                    "\r",
                                                    "// const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "// pm.test(`Update Business Partner's customer information. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "//     pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "// });\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"salesArrangementGroup\": {\r\n        \"code\": \"01\"\r\n    },\r\n    \"salesArrangementPriceGroup\": {\r\n        \"code\": \"C1\"\r\n    },\r\n    \"incotermsClassification\": {\r\n        \"code\": \"FH\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation/salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation",
                                                "salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/customerInformation/salesArrangements",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner's customer information. Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"salesAreaRef\": {\r\n        \"salesOrganizationDisplayId\": \"1010\",\r\n        \"distributionChannel\": \"20\",\r\n        \"division\": \"00\"\r\n    },\r\n    \"deliveryPriority\": {\r\n        \"code\": \"01\"\r\n    },\r\n    \"currency\": {\r\n        \"code\": \"EUR\"\r\n    },\r\n    \"salesArrangementGroup\": {\r\n        \"code\": \"01\"\r\n    },\r\n    \"salesArrangementPriceGroup\": {\r\n        \"code\": \"C1\"\r\n    },\r\n    \"functions\": [\r\n        {\r\n            \"functionName\": \"Bill-to Party 20\",\r\n            \"functionCode\": {\r\n                \"code\": \"RE\"\r\n            },\r\n            \"functionPartnerType\": \"functionPartnerCustomer\"\r\n        },\r\n        {\r\n            \"functionName\": \"Payer 20\",\r\n            \"functionCode\": {\r\n                \"code\": \"RG\"\r\n            },\r\n            \"functionPartnerType\": \"functionPartnerCustomer\"\r\n        },\r\n        {\r\n            \"functionName\": \"Ship-to Party 20\",\r\n            \"functionCode\": {\r\n                \"code\": \"WE\"\r\n            },\r\n            \"functionPartnerType\": \"functionPartnerCustomer\"\r\n        },\r\n        {\r\n            \"functionName\": \"Sold-to Party 20\",\r\n            \"functionCode\": {\r\n                \"code\": \"AG\"\r\n            },\r\n            \"functionPartnerType\": \"functionPartnerCustomer\"\r\n        }\r\n    ],\r\n    \"incotermsClassification\": {\r\n        \"code\": \"EXW\"\r\n    },\r\n    \"incotermsTransferLocationName\": \"transferLocationName20\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation/salesArrangements",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation",
                                                "salesArrangements"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/customerInformation/salesArrangements/functions",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's customer information. Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"functionCode\": {\r\n        \"code\": \"AG\"\r\n    },\r\n    \"functionPartnerType\": \"functionPartnerCustomer\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation/salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')/functions(functionName='Sold-to Party 2')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation",
                                                "salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')",
                                                "functions(functionName='Sold-to Party 2')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/customerInformation/salesArrangements/functions",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's customer information. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "postman.setNextRequest(\"UPDATE BP/customerInformation/taxClassifications\");"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"functionPartnerType\": \"functionPartnerCustomer2\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation/salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')/functions(functionName='Sold-to Party 2')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation",
                                                "salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')",
                                                "functions(functionName='Sold-to Party 2')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/customerInformation/salesArrangements/functions",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "// TODO Test if this works on upgrade to latest CDS (5.5.x)\r",
                                                    "\r",
                                                    "// const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "// pm.test(`Create Business Partner's customer information. Successful POST request ${jiraIssue}`, function () {\r",
                                                    "//     pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "// });\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"functionName\": \"testFunctionName\",\r\n    \"functionCode\": {\r\n        \"code\": \"AG\"\r\n    },\r\n    \"functionPartnerType\": \"functionPartnerCustomer\"\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation/salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')/functions",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation",
                                                "salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')",
                                                "functions"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/customerInformation/taxClassifications",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's customer information. Successful PUT request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"taxClassification\": {\r\n        \"code\": \"1\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation/taxClassifications(code='DE',code_001='TTX1')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation",
                                                "taxClassifications(code='DE',code_001='TTX1')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP/customerInformation/taxClassifications",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner's customer information. Successful PATCH request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"taxClassification\": {\r\n        \"code\": \"1\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation/taxClassifications(code='DE',code_001='TTX1')",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation",
                                                "taxClassifications(code='DE',code_001='TTX1')"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "CREATE BP/customerInformation/taxClassifications",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Create Business Partner's customer information. Successful POST request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "postman.setNextRequest(\"READ BP w/ All fields\");"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "POST",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"country\": {\r\n        \"code\": \"CA\"\r\n    },\r\n    \"taxCategory\": {\r\n        \"code\": \"TTX1\"\r\n    },\r\n    \"taxClassification\": {\r\n        \"code\": \"1\"\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})/customerInformation/taxClassifications",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})",
                                                "customerInformation",
                                                "taxClassifications"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ customerInformation)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "// After rejecting, a call to bookkeeping starts but doesn't finish. This causes the next request to hang up\r",
                                                    "// TODO Test if this works on upgrade to latest CDS (5.5.x)\r",
                                                    "\r",
                                                    "// const jiraIssue = pm.collectionVariables.get('jira-issue-manage-deletions')\r",
                                                    "\r",
                                                    "// pm.test(`Update Business Partner's customerInformation. Receive \"Cannot DELETE salesArrangements\" ${jiraIssue}`, function () {\r",
                                                    "//     pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                                    "// });\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"businessPartnerType\": \"person\",\r\n    \"isBlocked\": false,\r\n    \"customerInformation\": {\r\n        \"salesArrangements\": [\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"00\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName1\"\r\n            },\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"KF\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName2\"\r\n            }\r\n        ],\r\n        \"taxClassifications\": [\r\n            {\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"taxCategory\": {\r\n                    \"code\": \"TTX1\"\r\n                },\r\n                \"taxClassification\": {\r\n                    \"code\": \"1\"\r\n                }\r\n            }\r\n        ],\r\n        \"customerAccountGroup\": {\r\n            \"code\": \"CUST\"\r\n        },\r\n        \"vatLiability\": true\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "UPDATE BP (w/ customerInformation)",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "// After rejecting, a call to bookkeeping starts but doesn't finish. This causes the next request to hang up\r",
                                                    "// TODO Test if this works on upgrade to latest CDS (5.5.x)\r",
                                                    "\r",
                                                    "// const jiraIssue = pm.collectionVariables.get('jira-issue-manage-deletions')\r",
                                                    "\r",
                                                    "// pm.test(`Update Business Partner's customerInformation. Receive \"Cannot DELETE salesArrangements\" ${jiraIssue}`, function () {\r",
                                                    "//     pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                                    "// });\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PATCH",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"customerInformation\": {\r\n        \"salesArrangements\": [\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"00\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 1\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName1\"\r\n            },\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"KF\"\r\n                },\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"functionName\": \"Bill-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Payer 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"RG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Ship-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"WE\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    },\r\n                    {\r\n                        \"functionName\": \"Sold-to Party 2\",\r\n                        \"functionCode\": {\r\n                            \"code\": \"AG\"\r\n                        },\r\n                        \"functionPartnerType\": \"functionPartnerCustomer\"\r\n                    }\r\n                ],\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"EXW\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"transferLocationName2\"\r\n            }\r\n        ],\r\n        \"taxClassifications\": [\r\n            {\r\n                \"country\": {\r\n                    \"code\": \"DE\"\r\n                },\r\n                \"taxCategory\": {\r\n                    \"code\": \"TTX1\"\r\n                },\r\n                \"taxClassification\": {\r\n                    \"code\": \"1\"\r\n                }\r\n            }\r\n        ],\r\n        \"customerAccountGroup\": {\r\n            \"code\": \"CUST\"\r\n        },\r\n        \"vatLiability\": true\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "BP (root)",
                            "item": [
                                {
                                    "name": "UPDATE BP w/ All fields",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-manage-deletions')\r",
                                                    "\r",
                                                    "pm.test(`Update Business Partner (with all fields). Receive \"Multiple errors occured\" ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                                    "});\r",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "method": "PUT",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\r\n    \"businessPartnerType\": \"person\",\r\n    \"person\": {\r\n        \"nameDetails\": {\r\n            \"firstName\": \"Zacki\",\r\n            \"lastName\": \"Haynes\",\r\n            \"academicTitle\": {\r\n                \"code\": \"0004\"\r\n            }\r\n        },\r\n        \"gender\": {\r\n            \"code\": \"0\"\r\n        },\r\n        \"language\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"correspondenceLanguage\": {\r\n            \"code\": \"en\"\r\n        },\r\n        \"birthDate\": \"1990-12-31\",\r\n        \"nationality\": {\r\n            \"code\": \"US\"\r\n        }\r\n    },\r\n    \"bankAccounts\": [\r\n        {\r\n            \"id\": \"0001\",\r\n            \"bankAccountName\": \"bankAccountName1\",\r\n            \"bankControlKey\": \"01\",\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\",\r\n            \"bankAccountHolderName\": \"bankAccountHolderName1\",\r\n            \"IBAN\": \"IBAN1\",\r\n            \"bankAccount\": \"bankAccountNumber1\",\r\n            \"bankNumber\": \"21112018\",\r\n            \"bankAccountReference\": \"bankAccRef1\",\r\n            \"bankCountry\": {\r\n                \"code\": \"CA\"\r\n            }\r\n        }\r\n    ],\r\n    \"taxNumbers\": [\r\n        {\r\n            \"taxNumberType\": {\r\n                \"code\": \"US01\"\r\n            },\r\n            \"taxNumber\": \"123456789\"\r\n        }\r\n    ],\r\n    \"roles\": [\r\n        {\r\n            \"role\": {\r\n                \"code\": \"MKK\"\r\n            },\r\n            \"validFrom\": \"2020-01-01\",\r\n            \"validTo\": \"2020-12-31\"\r\n        },\r\n        {\r\n            \"role\": {\r\n                \"code\": \"FLCU01\"\r\n            },\r\n            \"validFrom\": \"2021-01-01\",\r\n            \"validTo\": \"2021-12-31\"\r\n        }\r\n    ],\r\n    \"isBlocked\": false,\r\n    \"addressData\": [\r\n        {\r\n            \"communicationPreferences\": {\r\n                \"nonVerbalCommunicationLanguage\": {\r\n                    \"code\": \"en\"}\r\n            },\r\n            \"usages\": [\r\n                {\r\n                    \"isStandard\": false,\r\n                    \"usage\": {\r\n                        \"code\": \"XXDEFAULT\"\r\n                    },\r\n                    \"validFrom\": \"2020-12-31\",\r\n                    \"validTo\": \"9999-12-31\"\r\n                }\r\n            ],\r\n            \"emailAddresses\": [\r\n                {\r\n                    \"address\": \"zack.haynes@email.com\"\r\n                }\r\n            ],\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"isMobile\": true,\r\n                    \"country\": {\r\n                        \"code\": \"US\"\r\n                    },\r\n                    \"number\": \"1234567890\",\r\n                    \"numberExtension\": \"123\"\r\n                }\r\n            ],\r\n            \"validFrom\": \"2020-12-31\",\r\n            \"validTo\": \"9999-12-31\",\r\n            \"postalAddressType\": \"personPostalAddress\",\r\n            \"personPostalAddress\": {\r\n                \"street\": {\r\n                    \"name\": \"Dane Street\"\r\n                },\r\n                \"houseNumber\": \"778\",\r\n                \"primaryRegion\": {\r\n                    \"code\": \"WA\"\r\n                },\r\n                \"country\": {\r\n                    \"code\": \"US\"\r\n                },\r\n                \"town\": {\r\n                    \"name\": \"Green Bluff\"\r\n                },\r\n                \"postCode\": \"99003\",\r\n                \"streetSuffix1\": \"suffix1 v1\",\r\n                \"streetSuffix2\": \"suffix2 v1\",\r\n                \"companyPostalCode\": \"99003\"\r\n            }\r\n        }\r\n    ],\r\n    \"customerInformation\": {\r\n        \"salesArrangements\": [\r\n            {\r\n                \"salesAreaRef\": {\r\n                    \"salesOrganizationDisplayId\": \"1010\",\r\n                    \"distributionChannel\": \"10\",\r\n                    \"division\": \"00\"\r\n                },\r\n                \"incotermsTransferLocationName\": \"FH\",\r\n                \"deliveryPriority\": {\r\n                    \"code\": \"02\"\r\n                },\r\n                \"currency\": {\r\n                    \"code\": \"EUR\"\r\n                },\r\n                \"salesArrangementGroup\": {\r\n                    \"code\": \"01\"\r\n                },\r\n                \"salesArrangementPriceGroup\": {\r\n                    \"code\": \"C1\"\r\n                },\r\n                \"incotermsClassification\": {\r\n                    \"code\": \"FH\"\r\n                }\r\n            }\r\n        ],\r\n        \"vatLiability\": true,\r\n        \"customerAccountGroup\": {\r\n            \"code\": \"FICA\"\r\n        }\r\n    }\r\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId}})",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId}})"
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        }
                    ]
                },
                {
                    "name": "DELETE",
                    "item": [
                        {
                            "name": "Read BP for Delete",
                            "item": [
                                {
                                    "name": "READ BP w/ All fields",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner with UUID. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "});\r",
                                                    "\r",
                                                    "var jsonData = pm.response.json();\r",
                                                    "\r",
                                                    "pm.environment.set(\"taxNumCode_A\", jsonData.taxNumbers[0].taxNumberType.code);\r",
                                                    "pm.environment.set(\"taxNumCode_B\", jsonData.taxNumbers[1].taxNumberType.code);\r",
                                                    "\r",
                                                    "pm.environment.set(\"bankAccId_A\", jsonData.bankAccounts[0].id);\r",
                                                    "pm.environment.set(\"bankAccId_B\", jsonData.bankAccounts[1].id);\r",
                                                    "\r",
                                                    "pm.environment.set(\"roleCode_A\", jsonData.roles[0].role.code);\r",
                                                    "pm.environment.set(\"roleCode_B\", jsonData.roles[1].role.code);\r",
                                                    "\r",
                                                    "if (jsonData.addressData[0].usages.filter(u => u.usage.code === 'XXDEFAULT').length > 0) {\r",
                                                    "    pm.environment.set(\"addressId_required\", jsonData.addressData[0].id);\r",
                                                    "    pm.environment.set(\"usageCode_required\", jsonData.addressData[0].usages[0].usage.code);\r",
                                                    "    pm.environment.set(\"validTo_required\", jsonData.addressData[0].usages[0].validTo);\r",
                                                    "    pm.environment.set(\"addressId_non_mandatory\", jsonData.addressData[1].id);\r",
                                                    "} else {\r",
                                                    "    pm.environment.set(\"addressId_required\", jsonData.addressData[1].id);\r",
                                                    "    pm.environment.set(\"usageCode_required\", jsonData.addressData[1].usages[0].usage.code);\r",
                                                    "    pm.environment.set(\"validTo_required\", jsonData.addressData[1].usages[0].validTo);\r",
                                                    "    pm.environment.set(\"addressId_non_mandatory\", jsonData.addressData[0].id);\r",
                                                    "}\r",
                                                    "\r",
                                                    "pm.environment.set(\"addressId_A\", jsonData.addressData[0].id);\r",
                                                    "pm.environment.set(\"addressId_B\", jsonData.addressData[1].id);\r",
                                                    "\r",
                                                    "pm.environment.set(\"usageCode_A_1\", jsonData.addressData[0].usages[0].usage.code);\r",
                                                    "pm.environment.set(\"validTo_A_1\", jsonData.addressData[0].usages[0].validTo);\r",
                                                    "\r",
                                                    "pm.environment.set(\"emailAddId_A_1\", jsonData.addressData[0].emailAddresses[0].id);\r",
                                                    "pm.environment.set(\"emailAddId_A_2\", jsonData.addressData[0].emailAddresses[1].id);\r",
                                                    "\r",
                                                    "pm.environment.set(\"phoneNumId_A_1\", jsonData.addressData[0].phoneNumbers[0].id);\r",
                                                    "pm.environment.set(\"phoneNumId_A_2\", jsonData.addressData[0].phoneNumbers[1].id);\r",
                                                    "\r",
                                                    "pm.environment.set(\"salesOrgDisplayId_A\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.salesOrganizationDisplayId);\r",
                                                    "pm.environment.set(\"distChannel_A\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.distributionChannel);\r",
                                                    "pm.environment.set(\"div_A\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.division);\r",
                                                    "\r",
                                                    "pm.environment.set(\"salesOrgDisplayId_B\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.salesOrganizationDisplayId);\r",
                                                    "pm.environment.set(\"distChannel_B\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.distributionChannel);\r",
                                                    "pm.environment.set(\"div_B\", jsonData.customerInformation.salesArrangements[0].salesAreaRef.division);\r",
                                                    "\r",
                                                    "pm.environment.set(\"funcName_A_1\", jsonData.customerInformation.salesArrangements[0].functions[0].functionName);\r",
                                                    "pm.environment.set(\"funcName_A_2\", jsonData.customerInformation.salesArrangements[0].functions[1].functionName);\r",
                                                    "\r",
                                                    "pm.environment.set(\"funcName_B_1\", jsonData.customerInformation.salesArrangements[1].functions[0].functionName);\r",
                                                    "pm.environment.set(\"funcName_B_2\", jsonData.customerInformation.salesArrangements[1].functions[1].functionName);\r",
                                                    "\r",
                                                    "pm.environment.set(\"taxClass_countryCode_A\", jsonData.customerInformation.taxClassifications[0].country.code);\r",
                                                    "pm.environment.set(\"taxClass_taxCatCode_A\", jsonData.customerInformation.taxClassifications[0].taxCategory.code);\r",
                                                    "\r",
                                                    "// setTimeout(function(){}, 1000)"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})?$expand=person($expand=nameDetails),organization($expand=nameDetails),bankAccounts,taxNumbers($expand=taxNumberType),addressData($expand=usages,personPostalAddress,organizationPostalAddress,emailAddresses,phoneNumbers),roles($expand=role),customerInformation($expand=salesArrangements($expand=functions),taxClassifications),serviceProviderInformation",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartner({{env_businessPartnerId_del}})"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$expand",
                                                    "value": "organization($expand=nameDetails)",
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "$expand",
                                                    "value": "person($expand=nameDetails),organization($expand=nameDetails),bankAccounts,taxNumbers($expand=taxNumberType),addressData($expand=usages,personPostalAddress,organizationPostalAddress,emailAddresses,phoneNumbers),roles($expand=role),customerInformation($expand=salesArrangements($expand=functions),taxClassifications),serviceProviderInformation"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Read BookKeeping w/ UUID",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-base')\r",
                                                    "\r",
                                                    "pm.test(`Read Business Partner bookkeeping with filter - UUID. Successful GET request ${jiraIssue}`, function () {\r",
                                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                                                    "    const jsonData = pm.response.json();\r",
                                                    "    pm.expect(jsonData.mdiBookKeeping).to.exist;\r",
                                                    "});"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [""],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{url}}/{{api-bp}}/BusinessPartnerBookKeeping({{env_businessPartnerId_del}})?$expand=mdiBookKeeping",
                                            "host": ["{{url}}"],
                                            "path": [
                                                "{{api-bp}}",
                                                "BusinessPartnerBookKeeping({{env_businessPartnerId_del}})"
                                            ],
                                            "query": [
                                                {
                                                    "key": "$expand",
                                                    "value": "mdiBookKeeping"
                                                }
                                            ]
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "DELETE BP",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Receive \"DELETE Method Not Allowed\" ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([405]);\r",
                                            "});\r",
                                            "\r",
                                            "// postman.setNextRequest(\"DELETE BP/taxNumbers\");"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/bankAccounts",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Successful DELETE request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
                                            "});\r",
                                            ""
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/bankAccounts(id='{{bankAccId_A}}')",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "bankAccounts(id='{{bankAccId_A}}')"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/taxNumbers",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Successful DELETE request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/taxNumbers('{{taxNumCode_A}}')",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "taxNumbers('{{taxNumCode_A}}')"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/roles",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-manage-deletions')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Receive \"Cannot DELETE roles\" ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/roles('{{roleCode_A}}')",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "roles('{{roleCode_A}}')"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/addressData/usages",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Receive \"Cannot DELETE addressData\" ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/addressData({{addressId_required}})/usages(code='{{usageCode_required}}',validTo={{validTo_required}})",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "addressData({{addressId_required}})",
                                        "usages(code='{{usageCode_required}}',validTo={{validTo_required}})"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/addressData/emailAddresses",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Successful DELETE request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/addressData({{addressId_A}})/emailAddresses({{emailAddId_A_1}})",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "addressData({{addressId_A}})",
                                        "emailAddresses({{emailAddId_A_1}})"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/addressData/phoneNumbers",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Successful DELETE request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/addressData({{addressId_A}})/phoneNumbers({{phoneNumId_A_2}})",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "addressData({{addressId_A}})",
                                        "phoneNumbers({{phoneNumId_A_2}})"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/addressData",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Receive \"Cannot DELETE addressData\" ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/addressData({{addressId_required}})",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "addressData({{addressId_required}})"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/addressData BILLING",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Successful DELETE request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/addressData({{addressId_non_mandatory}})",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "addressData({{addressId_non_mandatory}})"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/customerInformation/taxClassifcations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Successful DELETE request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/customerInformation/taxClassifications(code='DE',code_001='TTX1')",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "customerInformation",
                                        "taxClassifications(code='DE',code_001='TTX1')"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/customerInformation/salesArrangements/functions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-bp-round-offs')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Successful DELETE request ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/customerInformation/salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')/functions(functionName='Sold-to Party 2')",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "customerInformation",
                                        "salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='KF')",
                                        "functions(functionName='Sold-to Party 2')"
                                    ]
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "DELETE BP/customerInformation/salesArrangements",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "const jiraIssue = pm.collectionVariables.get('jira-issue-manage-deletions')\r",
                                            "\r",
                                            "pm.test(`Delete Business Partner. Receive \"Cannot DELETE salesArrangements\" ${jiraIssue}`, function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ],
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{url}}/{{api-bp}}/BusinessPartner({{env_businessPartnerId_del}})/customerInformation/salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='00')",
                                    "host": ["{{url}}"],
                                    "path": [
                                        "{{api-bp}}",
                                        "BusinessPartner({{env_businessPartnerId_del}})",
                                        "customerInformation",
                                        "salesArrangements(salesOrganizationDisplayId='1010',distributionChannel='10',division='00')"
                                    ]
                                }
                            },
                            "response": []
                        }
                    ],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [""]
                            }
                        }
                    ]
                }
            ],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [""]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [""]
                    }
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{jwt}}",
                "type": "string"
            }
        ]
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [""]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [""]
            }
        }
    ],
    "variable": [
        {
            "key": "api-bp",
            "value": "api/beta/businessPartner/v1"
        },
        {
            "key": "api-config",
            "value": "api/config/v1"
        },
        {
            "key": "api-bp-config",
            "value": "api/businessPartner/v1/config"
        },
        {
            "key": "jira-issue-bp-round-offs",
            "value": "UTILITIESCLOUDSOLUTION-3018"
        },
        {
            "key": "jira-issue-job-scheduler",
            "value": "UTILITIESCLOUDSOLUTION-3014"
        },
        {
            "key": "jira-issue-bp-base",
            "value": "UTILITIESCLOUDSOLUTION-2916"
        },
        {
            "key": "jira-issue-manage-deletions",
            "value": "UTILITIESCLOUDSOLUTION-3059"
        }
    ]
}
